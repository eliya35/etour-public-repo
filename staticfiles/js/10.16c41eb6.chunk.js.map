{"version":3,"sources":["components/regionfilters/northamericaregion/PageTitle.jsx","components/regionfilters/northamericaregion/fetch-north-america-destinations.jsx","components/regionfilters/northamericaregion/north-america-pagecontent.jsx"],"names":["NorthAmericaRegionPageTitle","react_default","a","createElement","className","NorthAmericaRegionDestinations","_useState","useState","_useState2","Object","slicedToArray","tours","setTours","_useState3","_useState4","currentPage","setCurrentPage","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","error","setError","_useState9","postPerPage","indexOfLastTour","indexOfFirstTour","currentTours","filter","tour","region","slice","useEffect","axios","get","then","res","data","catch","src","loader","alt","Error","map","item","DisplaySites","key","id","title","name","imgsrc","image","shortDescription","short_description","price","status","is_featured","Pagination","totalTours","length","paginate","pageNumber","NorthAmericaRegionPageContents","PageTitle","FilterUi","MobileFilter","ErrorBoundary","fetch_north_america_destinations"],"mappings":"4JAYeA,UATqB,WAChC,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,+GC4EDE,EA3EwB,WAAM,IAAAC,EACfC,mBAAS,IADMC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAClCK,EADkCH,EAAA,GAC3BI,EAD2BJ,EAAA,GAAAK,EAEHN,mBAAS,GAFNO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAElCE,EAFkCD,EAAA,GAErBE,EAFqBF,EAAA,GAAAG,EAGPV,oBAAS,GAHFW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGlCE,EAHkCD,EAAA,GAGvBE,EAHuBF,EAAA,GAAAG,EAIfd,oBAAS,GAJMe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAIlCE,EAJkCD,EAAA,GAI3BE,EAJ2BF,EAAA,GAAAG,EAKnBlB,mBAAS,IAAxBmB,EALkCjB,OAAAC,EAAA,EAAAD,CAAAgB,EAAA,MAWnCE,EAAkBZ,EAAcW,EAChCE,EAAmBD,EAAkBD,EACrCG,EAL0BlB,EAAMmB,OAAO,SAAAC,GAAI,MAAoB,kBAAhBA,EAAKC,SAKbC,MAAML,EAAkBD,GAoBrE,GAhBAO,oBACI,WACIC,IAAMC,IACF,yOAECC,KAAK,SAAAC,GACF1B,EAAS0B,EAAIC,MACbnB,GAAa,KAEhBoB,MAAM,WACHpB,GAAa,GACbI,GAAS,MAElB,IAGHL,EACA,OACIlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKsC,IAAKC,IAAQtC,UAAU,oBAAoBuC,IAAI,gBAKhE,GAAIpB,EACA,MAAM,IAAIqB,MAAM,+EAGpB,OACI3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACVyB,EAAagB,IAAI,SAAAC,GACd,OACI7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACIC,IAAKF,EAAKG,GACVA,GAAIH,EAAKG,GACTC,MAAOJ,EAAKK,KACZC,OAAQN,EAAKO,MACbF,KAAML,EAAKK,KACXG,iBAAkBR,EAAKS,kBACvBC,MAAOV,EAAKU,MACZV,KAAMA,EACNW,OAAQX,EAAKY,iBAK7BzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CACIjC,YAAaA,EACbkC,WAAYjD,EAAMkD,OAClBC,SAtDC,SAACC,GAAD,OAAgB/C,EAAe+C,iBCArCC,UAbwB,WACnC,OACI/D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC8D,EAAD,MACAhE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,MACAjE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,MAEAlE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,KACInE,EAAAC,EAAAC,cAACkE,EAAD","file":"static/js/10.16c41eb6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './north-america-region.css'\r\n\r\nconst NorthAmericaRegionPageTitle = () => {\r\n    return (\r\n        <div className=\"north-america-page-title\">\r\n            <h1><strong>North America Region Destinations</strong></h1>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default NorthAmericaRegionPageTitle;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport TourCard from '../../homepage/DisplaySites';\r\nimport Pagination from '../../homepage/Pagination';\r\nimport loader from '../../../clockwise.svg'\r\n\r\n\r\nconst NorthAmericaRegionDestinations = () => {\r\n    const [tours, setTours] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [postPerPage] = useState(24);\r\n\r\n    // Filter North America Sites\r\n    const northAmericaRegionTours = tours.filter(tour => tour.region === 'NORTH AMERICA')\r\n\r\n    // Pagiantion Logic\r\n    const indexOfLastTour = currentPage * postPerPage;\r\n    const indexOfFirstTour = indexOfLastTour - postPerPage;\r\n    const currentTours = northAmericaRegionTours.slice(indexOfFirstTour, indexOfLastTour);\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n\r\n    useEffect(\r\n        () => {\r\n            axios.get(\r\n                'https://etour.herokuapp.com/HDp0mdCOWxaBRhELG5PUMWQnrXSkObDQBnvUhC5XsTROlI6Wz99ctDZtzRLqHuvgidz0mX3ws3K6ggPc8p21OT2jwEcbpNMDHcHrxb0EoN7al1aP8fKoSpZMyXvL9FxnkJuS2KG5r1d8YkjyYjgCj2V44GdYk6ehB7JJuqoE6wAZWe5VisNMKnFYfS40mhymtJNFb8Aq/'\r\n            )\r\n                .then(res => {\r\n                    setTours(res.data);\r\n                    setIsLoading(false)\r\n                })\r\n                .catch(() => {\r\n                    setIsLoading(false);\r\n                    setError(true);\r\n                })\r\n        }, []\r\n    );\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"allsites-loading\">\r\n                <img src={loader} className=\"loading-clockwise\" alt=\"Loading...\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        throw new Error('NetworkError: Please check your connnection or try again laterðŸ˜¶.')\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid d-flex justify-content-center\">\r\n            <div className=\"row\">\r\n                {currentTours.map(item => {\r\n                    return (\r\n                        <div className=\"col-md-3\">\r\n                            <TourCard\r\n                                key={item.id}\r\n                                id={item.id}\r\n                                title={item.name}\r\n                                imgsrc={item.image}\r\n                                name={item.name}\r\n                                shortDescription={item.short_description}\r\n                                price={item.price}\r\n                                item={item}\r\n                                status={item.is_featured}\r\n                            />\r\n                        </div>\r\n                    );\r\n                })}\r\n                <Pagination\r\n                    postPerPage={postPerPage}\r\n                    totalTours={tours.length}\r\n                    paginate={paginate}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NorthAmericaRegionDestinations;","import React from 'react';\r\nimport Filter from '../../homepage/FilterUi';\r\nimport MobileFilter from '../../homepage/MobileFilter';\r\nimport NorthAmericaRegionPageTitle from './PageTitle';\r\nimport NorthAmericaRegionDestinations from './fetch-north-america-destinations';\r\nimport ErrorBoundary from '../../../ErrorBoundary';\r\n\r\n\r\nconst NorthAmericaRegionPageContents = () => {\r\n    return (\r\n        <div>\r\n            <NorthAmericaRegionPageTitle />\r\n            <Filter />\r\n            <MobileFilter />\r\n\r\n            <ErrorBoundary>\r\n                <NorthAmericaRegionDestinations />\r\n            </ErrorBoundary>\r\n        </div>\r\n    );\r\n}\r\nexport default NorthAmericaRegionPageContents;"],"sourceRoot":""}