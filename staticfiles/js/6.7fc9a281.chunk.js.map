{"version":3,"sources":["components/homepage/DisplaySites.jsx","components/regionfilters/middle-eastregion/PageTitle.jsx","components/regionfilters/middle-eastregion/fetch-middle-east-destinations.jsx","components/regionfilters/middle-eastregion/middle-east-pagecontent.jsx"],"names":["TourCard","props","addItem","useCart","_useState","useState","status","isFeatured","Object","C_DeployedApp_E_Tour_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","src","imgsrc","alt","name","title","Fragment","shortDescription","href","id","onClick","item","MiddleEastRegionPageTitle","react_default","MiddleEastRegionDestinations","_useState2","slicedToArray","tours","setTours","_useState3","_useState4","currentPage","setCurrentPage","_useState5","postPerPage","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","error","setError","indexOfLastTour","indexOfFirstTour","currentTours","filter","tour","region","slice","useEffect","axios","get","then","res","data","catch","loader","Error","map","DisplaySites","key","image","short_description","price","is_featured","Pagination","totalTours","length","paginate","pageNumber","MiddleEastRegionPageContents","PageTitle","FilterUi","MobileFilter","ErrorBoundary","fetch_middle_east_destinations"],"mappings":"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","file":"static/js/6.7fc9a281.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useCart } from 'react-use-cart'\r\nimport '../Styles/cardstyle.css'\r\n\r\n\r\nconst TourCard = props => {\r\n    const { addItem } = useCart();\r\n    const [isFeatured] = useState(props.status);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"col\">\r\n                <div className=\"card\">\r\n                    <div className=\"overflow\">\r\n                        <img src={props.imgsrc} className='card-img-top' alt={props.name} />\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{props.title}</h5>\r\n                            {isFeatured ? <div className=\"status\">< h6 className='badge badge-primary'>featured</h6></div> : <></>}\r\n                            <p className=\"card-text\">\r\n                                {props.shortDescription}\r\n                            </p>\r\n                            <a href={'/view/' + props.id} className='btn btn-primary' id='view-btn'>View</a>\r\n                            <button\r\n                                className='btn btn-warning m-2'\r\n                                id='add-item-btn'\r\n                                onClick={() => addItem(props.item)}>\r\n                                Add to List\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default TourCard;\r\n","import React from 'react';\r\nimport './middle-east-region.css'\r\n\r\nconst MiddleEastRegionPageTitle = () => {\r\n    return (\r\n        <div className=\"middle-east-page-title\">\r\n            <h1><strong>Middle East Region Destinations</strong></h1>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default MiddleEastRegionPageTitle;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport TourCard from '../../homepage/DisplaySites';\r\nimport Pagination from '../../homepage/Pagination';\r\nimport loader from '../../../clockwise.svg'\r\n\r\n\r\nconst MiddleEastRegionDestinations = () => {\r\n    const [tours, setTours] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postPerPage] = useState(24);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n\r\n    // Filter Middle-East-Destinations \r\n    const midlleEastRegionTours = tours.filter(tour => tour.region === 'MIDDLE EAST')\r\n\r\n    // Pagination Logic\r\n    const indexOfLastTour = currentPage * postPerPage;\r\n    const indexOfFirstTour = indexOfLastTour - postPerPage;\r\n    const currentTours = midlleEastRegionTours.slice(indexOfFirstTour, indexOfLastTour);\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n    \r\n    useEffect(\r\n        () => {\r\n            axios.get(\r\n                'https://etour.herokuapp.com/HDp0mdCOWxaBRhELG5PUMWQnrXSkObDQBnvUhC5XsTROlI6Wz99ctDZtzRLqHuvgidz0mX3ws3K6ggPc8p21OT2jwEcbpNMDHcHrxb0EoN7al1aP8fKoSpZMyXvL9FxnkJuS2KG5r1d8YkjyYjgCj2V44GdYk6ehB7JJuqoE6wAZWe5VisNMKnFYfS40mhymtJNFb8Aq/'\r\n            )\r\n                .then(res => {\r\n                    setTours(res.data);\r\n                    setIsLoading(false);\r\n\r\n                })\r\n                .catch(() => {\r\n                    setIsLoading(false);\r\n                    setError(true);\r\n                })\r\n        }, []\r\n    );\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"allsites-loading\">\r\n                <img src={loader} className=\"loading-clockwise\" alt=\"Loading...\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        throw new Error('NetworkError: Please check your connnection or try again laterðŸ˜¶.')\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid d-flex justify-content-center\">\r\n            <div className=\"row\">\r\n                {currentTours.map(item => {\r\n                    return (\r\n                        <div className=\"col-md-3\">\r\n                            <TourCard\r\n                                key={item.id}\r\n                                id={item.id}\r\n                                title={item.name}\r\n                                imgsrc={item.image}\r\n                                name={item.name}\r\n                                shortDescription={item.short_description}\r\n                                price={item.price}\r\n                                item={item}\r\n                                status={item.is_featured}\r\n                            />\r\n                        </div>\r\n                    );\r\n                })}\r\n                <Pagination\r\n                    postPerPage={postPerPage}\r\n                    totalTours={tours.length}\r\n                    paginate={paginate}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MiddleEastRegionDestinations;","import React from 'react';\r\nimport Filter from '../../homepage/FilterUi';\r\nimport MobileFilter from '../../homepage/MobileFilter';\r\nimport MiddleEastRegionPageTitle from './PageTitle';\r\nimport MiddleEastRegionDestinations from './fetch-middle-east-destinations';\r\nimport ErrorBoundary from '../../../ErrorBoundary';\r\n\r\n\r\nconst MiddleEastRegionPageContents = () => {\r\n    return (\r\n        <div>\r\n            <MiddleEastRegionPageTitle />\r\n            <Filter />\r\n            <MobileFilter />\r\n            \r\n            <ErrorBoundary>\r\n                <MiddleEastRegionDestinations />\r\n            </ErrorBoundary>\r\n        </div>\r\n    );\r\n}\r\nexport default MiddleEastRegionPageContents;"],"sourceRoot":""}