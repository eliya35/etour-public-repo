{"version":3,"sources":["components/regionfilters/antarticregion/PageTitle.jsx","components/regionfilters/antarticregion/fetch-antartic-destinations.jsx","components/regionfilters/antarticregion/antartic-pagecontent.jsx"],"names":["AntarticRegionPageTitle","react_default","a","createElement","className","AntarticRegionDestinations","_useState","useState","_useState2","Object","slicedToArray","tours","setTours","_useState3","_useState4","currentPage","setCurrentPage","_useState5","postPerPage","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","error","setError","indexOfLastTour","length","indexOfFirstTour","currentTours","filter","tour","region","slice","useEffect","axios","get","then","res","data","catch","src","loader","alt","Error","map","item","DisplaySites","key","id","title","name","imgsrc","image","shortDescription","short_description","price","status","is_featured","Pagination","totalTours","paginate","pageNumber","AntarticRegionPageContents","PageTitle","FilterUi","MobileFilter","ErrorBoundary","fetch_antartic_destinations"],"mappings":"2JAYeA,UATiB,WAC5B,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,0GCsFDE,EArFoB,WAAM,IAAAC,EACXC,mBAAS,IADEC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC9BK,EAD8BH,EAAA,GACvBI,EADuBJ,EAAA,GAAAK,EAECN,mBAAS,GAFVO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAE9BE,EAF8BD,EAAA,GAEjBE,EAFiBF,EAAA,GAAAG,EAGfV,mBAAS,IAAxBW,EAH8BT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,MAAAE,EAIHZ,oBAAS,GAJNa,EAAAX,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GAI9BE,EAJ8BD,EAAA,GAInBE,EAJmBF,EAAA,GAAAG,EAKXhB,oBAAS,GALEiB,EAAAf,OAAAC,EAAA,EAAAD,CAAAc,EAAA,GAK9BE,EAL8BD,EAAA,GAKvBE,EALuBF,EAAA,GAc/BG,GAPehB,EAAMiB,OAOHb,EAAcG,GAChCW,EAAmBF,EAAkBT,EACrCY,EALsBnB,EAAMoB,OAAO,SAAAC,GAAI,MAAoB,eAAhBA,EAAKC,SAKbC,MAAML,EAAkBF,GAmBjE,GAhBAQ,oBACI,WACIC,IAAMC,IACF,yOAECC,KAAK,SAAAC,GACF3B,EAAS2B,EAAIC,MACblB,GAAa,KAEhBmB,MAAM,WACHnB,GAAa,GACbI,GAAS,MAElB,IAGHL,EACA,OACIpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKuC,IAAKC,IAAQvC,UAAU,oBAAoBwC,IAAI,gBAKhE,GAAInB,EACA,MAAM,IAAIoB,MAAM,+EAIpB,OACI5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACO,IAAjBO,EAAMiB,QACH3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACV0B,EAAagB,IAAI,SAAAC,GACd,OACI9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CACIC,IAAKF,EAAKG,GACVA,GAAIH,EAAKG,GACTC,MAAOJ,EAAKK,KACZC,OAAQN,EAAKO,MACbF,KAAML,EAAKK,KACXG,iBAAkBR,EAAKS,kBACvBC,MAAOV,EAAKU,MACZV,KAAMA,EACNW,OAAQX,EAAKY,iBAK7B1D,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CACI1C,YAAaA,EACb2C,WAAYlD,EAAMiB,OAClBkC,SAvDH,SAACC,GAAD,OAAgB/C,EAAe+C,OA2DtB,IAAjBpD,EAAMiB,QACH3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,kDChEL6D,UAboB,WAC/B,OACI/D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC8D,EAAD,MACAhE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,MACAjE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,MAEAlE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,KACInE,EAAAC,EAAAC,cAACkE,EAAD","file":"static/js/5.b1919c7a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './antartic-region.css'\r\n\r\nconst AntarticRegionPageTitle = () => {\r\n    return (\r\n        <div className=\"antartic-page-title\">\r\n            <h1><strong>Antartic Region Destinations</strong></h1>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default AntarticRegionPageTitle;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport TourCard from '../../homepage/DisplaySites';\r\nimport Pagination from '../../homepage/Pagination';\r\nimport loader from '../../../clockwise.svg'\r\n\r\n\r\nconst AntarticRegionDestinations = () => {\r\n    const [tours, setTours] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postPerPage] = useState(24);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n\r\n    const destinations = tours.length;\r\n    const zeroDestinations = 0;\r\n\r\n    // Filter out Antartica Tours\r\n    const antarticRegionTours = tours.filter(tour => tour.region === 'ANTARCTICA')\r\n\r\n    // Pagination Logic\r\n    const indexOfLastTour = currentPage * postPerPage;\r\n    const indexOfFirstTour = indexOfLastTour - postPerPage;\r\n    const currentTours = antarticRegionTours.slice(indexOfFirstTour, indexOfLastTour);\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n    useEffect(\r\n        () => {\r\n            axios.get(\r\n                'https://etour.herokuapp.com/HDp0mdCOWxaBRhELG5PUMWQnrXSkObDQBnvUhC5XsTROlI6Wz99ctDZtzRLqHuvgidz0mX3ws3K6ggPc8p21OT2jwEcbpNMDHcHrxb0EoN7al1aP8fKoSpZMyXvL9FxnkJuS2KG5r1d8YkjyYjgCj2V44GdYk6ehB7JJuqoE6wAZWe5VisNMKnFYfS40mhymtJNFb8Aq/'\r\n            )\r\n                .then(res => {\r\n                    setTours(res.data);\r\n                    setIsLoading(false);\r\n                })\r\n                .catch(() => {\r\n                    setIsLoading(false);\r\n                    setError(true);\r\n                })\r\n        }, []\r\n    );\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"allsites-loading\">\r\n                <img src={loader} className=\"loading-clockwise\" alt=\"Loading...\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        throw new Error('NetworkError: Please check your connnection or try again laterðŸ˜¶.')\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid d-flex justify-content-center\">\r\n            {tours.length !== 0 &&\r\n                <div className=\"row\">\r\n                    {currentTours.map(item => {\r\n                        return (\r\n                            <div className=\"col-md-3\">\r\n                                <TourCard\r\n                                    key={item.id}\r\n                                    id={item.id}\r\n                                    title={item.name}\r\n                                    imgsrc={item.image}\r\n                                    name={item.name}\r\n                                    shortDescription={item.short_description}\r\n                                    price={item.price}\r\n                                    item={item}\r\n                                    status={item.is_featured}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    })}\r\n                    <Pagination\r\n                        postPerPage={postPerPage}\r\n                        totalTours={tours.length}\r\n                        paginate={paginate}\r\n                    />\r\n                </div>\r\n            }\r\n            {tours.length === 0 &&\r\n                <div className='no-added-destinations'>\r\n                    <h1>No Added Destinations Yet</h1>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AntarticRegionDestinations;","import React from 'react';\r\nimport Filter from '../../homepage/FilterUi';\r\nimport MobileFilter from '../../homepage/MobileFilter';\r\nimport AntarticRegionPageTitle from './PageTitle';\r\nimport AntarticRegionDestinations from './fetch-antartic-destinations';\r\nimport ErrorBoundary from '../../../ErrorBoundary';\r\n\r\n\r\nconst AntarticRegionPageContents = () => {\r\n    return (\r\n        <div>\r\n            <AntarticRegionPageTitle />\r\n            <Filter />\r\n            <MobileFilter />\r\n            \r\n            <ErrorBoundary>\r\n                <AntarticRegionDestinations />\r\n            </ErrorBoundary>\r\n        </div>\r\n    );\r\n}\r\nexport default AntarticRegionPageContents;"],"sourceRoot":""}